#!/usr/bin/env ruby

require 'slop'
require 'pathname'
require 'juno'

opts = Slop.parse(help: true) do
  banner "Usage: #{File.basename(__FILE__)} [options]"

  on 's', 'source=',      'Path to Juno directory. Required.'
  on 'd', 'destination=', 'Path to output directory. Required.'
  on 'o', 'overwrite',    'Overwrite files in output directory.'

  on 'v', 'version', 'Display version.' do
    puts Juno::VERSION
    exit
  end
end

command_help = opts.help
opts = opts.to_hash

unless opts[:source] && opts[:destination]
  abort "ERROR: Missing required arguments.\n\n#{command_help}"
end

opts[:source] = Pathname.new(opts[:source]).expand_path
opts[:destination] = Pathname.new(opts[:destination]).expand_path

unless opts[:source].directory?
  abort "ERROR: Source must be a directory."
end

unless opts[:destination].directory? || opts[:destination].parent.directory?
  abort "ERROR: Destination must be a directory."
end

juno = Juno::Installation.new(opts[:source])

juno.users.each do |user|
  opts[:destination].mkdir unless opts[:destination].directory?
  user_dir = opts[:destination].join("#{user.login} (#{user.path_id})")
  user_dir.mkdir unless user_dir.directory?

  user.folders.each do |folder|
    mbox_path = user_dir.join("#{folder.name}.mbox")
    folder.write_mbox(mbox_path, overwrite: opts[:overwrite])
  end
end
